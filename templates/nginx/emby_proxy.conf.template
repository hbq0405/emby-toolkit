# /etc/nginx/conf.d/emby_proxy.conf (V4 - .strm 精准捕获最终版)

upstream emby_server {
    server {{ EMBY_UPSTREAM }};
}

upstream virtual_library_proxy {
    server {{ PROXY_UPSTREAM }};
}

{% if REDIRECT_UPSTREAM %}
upstream redirect_service {
    server {{ REDIRECT_UPSTREAM }};
}
{% endif %}

server {
    listen {{ NGINX_LISTEN_PORT }};
    server_name your.domain.com;

    # --- 基础代理参数 ---
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_buffering off;

    # ====================================================================
    #  核心路由规则 (V4)
    # ====================================================================

    # ★★★ 规则 1 (已修正)：转发所有由 Python 代理生成的虚拟视频路径 ★★★
    {% if REDIRECT_UPSTREAM %}
    location ~* ^/emby/videos/(.*)$ {
        # --- CORS 解决代码 ---
        # 允许来自任何源的请求
        add_header 'Access-Control-Allow-Origin' '*' always;
        # 允许的 HTTP 方法
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        # 允许客户端发送的请求头
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        # 允许客户端访问的响应头
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # 处理浏览器的 OPTIONS 预检请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        # --- CORS 解决代码结束 ---

        # ★★★ 路径修正 ★★★
        # 您的旧配置 proxy_pass http://redirect_service/emby/videos/$1; 是正确的
        # 它会将 /emby/videos/xxxx 转发到 redirect_service/emby/videos/xxxx
        proxy_pass http://redirect_service/emby/videos/$1$is_args$args;
    }
    {% endif %}

    # --- 以下是虚拟库路由规则 ---

    location ~ /emby/Users/([a-f0-9]+)/Views {
        proxy_pass http://virtual_library_proxy;
    }

    # ★★★ 规则 2：【新增的关键规则】拦截“获取库内容”的请求 ★★★
    # 这是我们之前一直缺失的规则！
    location ~ /emby/Users/([a-f0-9]+)/Items$ {
        # 检查 URL 参数中是否包含 ParentId=-xxxxx
        if ($arg_ParentId ~ ^-\d+$) {
            # 如果是，就转发给 Python 代理
            proxy_pass http://virtual_library_proxy;
        }
        # 如果不是，就执行默认行为，转发给真实 Emby
        proxy_pass http://emby_server;
    }

    # 规则 3：拦截所有路径中包含虚拟ID的请求 (例如获取图片)
    location ~ /(emby/Users/[^/]+/Items|emby/Items)/-(\d+) {
        proxy_pass http://virtual_library_proxy;
    }

    # 规则 4：拦截虚拟库内的“元数据筛选”和“最新添加”请求
    location ~ /Items/(Prefixes|Genres|Studios|Tags|OfficialRatings|Years|Latest)$ {
        if ($arg_ParentId ~ ^-\d+$) {
            proxy_pass http://virtual_library_proxy;
        }
        if ($arg_customViewId ~ ^-\d+$) {
            proxy_pass http://virtual_library_proxy;
        }
        proxy_pass http://emby_server;
    }

    location ~ /Items/(\d+)/PlaybackInfo {
        proxy_pass http://virtual_library_proxy;
    }

    # 规则 5: WebSocket (保持不变)
    location /embywebsocket {
        proxy_pass http://emby_server;
    }

    # 兜底规则：转发所有其他请求到真实 Emby
    location / {
        proxy_pass http://emby_server;
    }
}