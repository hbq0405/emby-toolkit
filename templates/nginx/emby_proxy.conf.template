# /etc/nginx/conf.d/emby_proxy.conf (V4 - .strm 精准捕获最终版)

upstream emby_server {
    server {{ EMBY_UPSTREAM }};
}

upstream virtual_library_proxy {
    server {{ PROXY_UPSTREAM }};
}

{% if REDIRECT_UPSTREAM %}
upstream redirect_service {
    server {{ REDIRECT_UPSTREAM }};
}
{% endif %}

server {
    listen {{ NGINX_LISTEN_PORT }};
    server_name your.domain.com;

    # --- 基础代理参数 ---
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_buffering off;

    # ====================================================================
    #  核心路由规则 (V4)
    # ====================================================================

    # ★★★ 规则 1：【条件化】网盘视频流转发 ★★★
    # 此规则块仅在设置了 REDIRECT_UPSTREAM 时生效。
    {% if REDIRECT_UPSTREAM %}

    # 规则 1a: 根据上游代理添加的“标签”处理所有视频流。
    # 这个规则的优先级最高，精准捕获所有视频播放请求。
    location ~ /videos/ {
        # 检查 URL 查询参数中是否包含 `force_redirect=true` 标签。
        if ($args ~* "force_redirect=true") {
            proxy_pass http://redirect_service;
        }
        
        # 如果没有该标签，则说明是真正的本地视频，直接交给 Emby 处理以保证秒播。
        proxy_pass http://emby_server;
    }

    # 规则 1b: 兼容传统的 .strm 文件直接请求（作为备用）。
    # 正常情况下，.strm 也会被 Python 代理打上标签，走上面的规则。
    # 这条规则可以捕获一些边缘情况。
    location ~ \.strm$ {
        proxy_pass http://redirect_service;
    }

    {% endif %}

    # --- 以下是虚拟库路由规则 ---

    location ~ /emby/Users/([a-f0-9]+)/Views {
        proxy_pass http://virtual_library_proxy;
    }

    # ★★★ 规则 2：【新增的关键规则】拦截“获取库内容”的请求 ★★★
    # 这是我们之前一直缺失的规则！
    location ~ /emby/Users/([a-f0-9]+)/Items$ {
        # 检查 URL 参数中是否包含 ParentId=-xxxxx
        if ($arg_ParentId ~ ^-\d+$) {
            # 如果是，就转发给 Python 代理
            proxy_pass http://virtual_library_proxy;
        }
        # 如果不是，就执行默认行为，转发给真实 Emby
        proxy_pass http://emby_server;
    }

    # 规则 3：拦截所有路径中包含虚拟ID的请求 (例如获取图片)
    location ~ /(emby/Users/[^/]+/Items|emby/Items)/-(\d+) {
        proxy_pass http://virtual_library_proxy;
    }

    # 规则 4：拦截虚拟库内的“元数据筛选”和“最新添加”请求
    location ~ /Items/(Prefixes|Genres|Studios|Tags|OfficialRatings|Years|Latest)$ {
        if ($arg_ParentId ~ ^-\d+$) {
            proxy_pass http://virtual_library_proxy;
        }
        if ($arg_customViewId ~ ^-\d+$) {
            proxy_pass http://virtual_library_proxy;
        }
        proxy_pass http://emby_server;
    }

    # 规则 5: WebSocket (保持不变)
    location /embywebsocket {
        proxy_pass http://emby_server;

        # ★★★ 核心修复：为WebSocket连接明确设置必要的头信息 ★★★
        # 即使全局已设置，在这里再次声明可以保证最高优先级和稳定性
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    # 兜底规则：转发所有其他请求到真实 Emby
    location / {
        proxy_pass http://emby_server;
    }
}