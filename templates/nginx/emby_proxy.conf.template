# /etc/nginx/conf.d/emby_proxy.conf (V5 - auth_request 优雅并发版)

upstream emby_server {
    server {{ EMBY_UPSTREAM }};
}

upstream virtual_library_proxy {
    server {{ PROXY_UPSTREAM }};
}

{% if REDIRECT_UPSTREAM %}
upstream redirect_service {
    server {{ REDIRECT_UPSTREAM }};
}
{% endif %}

server {
    # 当 auth_request 失败时，我们会跳转到这里...
    location @playback_error {
        # 1. 首先，使用 rewrite 将内部 URI 重写为 /playback-error。
        #    'break' 参数很重要，它告诉 Nginx 完成重写后就停在这里，不要再匹配其他 location。
        rewrite ^ /playback-error break;

        # 2. 然后，使用不带路径的 proxy_pass。
        #    Nginx 会自动将上面重写后的路径 (/playback-error) 用于请求。
        proxy_pass http://virtual_library_proxy;

        # 3. （最佳实践）为了确保 Python 能正确处理请求，我们最好也把关键的 Header 传过去。
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    listen {{ NGINX_LISTEN_PORT }};
    server_name your.domain.com;

    # --- 基础代理参数 ---
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_buffering off;

    # ====================================================================
    #  核心路由规则 (V5)
    # ====================================================================

    # ★★★ 规则 1：【条件化】转发所有视频流请求 (保持不变) ★★★
    {% if REDIRECT_UPSTREAM %}
    location ~* (\.strm$|\.(mkv|mp4|ts|avi|iso|mov|webm|flv)$|/videos/.*stream) {
        proxy_pass http://redirect_service;
    }
    {% endif %}

    # ★★★ 新增：定义内部授权请求的端点 ★★★
    # 这个位置只能被 Nginx 内部的 auth_request 调用
    location = /auth-playback {
        internal; # 关键！禁止外部直接访问
        proxy_pass http://virtual_library_proxy;
        proxy_pass_request_body off; # 我们不需要请求体
        proxy_set_header Content-Length "";
        # 将从原始请求中捕获的用户ID，作为Header传给Python
        proxy_set_header X-Emby-UserId $arg_UserId;
    }

    # ★★★ 核心修改：重构 PlaybackInfo 规则 ★★★
    location ~ /Items/(\d+)/PlaybackInfo {
        # 1. 发起授权请求
        auth_request /auth-playback;
        
        # 2. 如果授权失败 (Python返回403)，则执行自定义错误处理
        error_page 403 = @playback_error;

        # 3. 如果授权成功 (Python返回2xx)，则将请求转发给真实的Emby服务器
        #    这样客户端就能收到包含正确 302 跳转的原始响应！
        proxy_pass http://emby_server;
    }

    # --- 以下是虚拟库路由规则 (保持不变) ---

    location ~ /emby/Users/([a-f0-9]+)/Views {
        proxy_pass http://virtual_library_proxy;
    }

    location ~ /emby/Users/([a-f0-9]+)/Items$ {
        if ($arg_ParentId ~ ^-\d+$) {
            proxy_pass http://virtual_library_proxy;
        }
        proxy_pass http://emby_server;
    }

    location ~ /(emby/Users/[^/]+/Items|emby/Items)/-(\d+) {
        proxy_pass http://virtual_library_proxy;
    }

    location ~ /Items/(Prefixes|Genres|Studios|Tags|OfficialRatings|Years|Latest)$ {
        if ($arg_ParentId ~ ^-\d+$) {
            proxy_pass http://virtual_library_proxy;
        }
        if ($arg_customViewId ~ ^-\d+$) {
            proxy_pass http://virtual_library_proxy;
        }
        proxy_pass http://emby_server;
    }

    location /embywebsocket {
        proxy_pass http://emby_server;
    }

    location / {
        proxy_pass http://emby_server;
    }
}